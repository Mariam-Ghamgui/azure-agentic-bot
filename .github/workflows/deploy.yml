name: Deploy Azure Resources and Prompt Flow

on:
  workflow_dispatch:
    inputs:
      action:
        type: choice
        description: 'Action to perform'
        required: true
        options:
          - deploy m2c-chatbot 
  push:
    branches:
      - develop
    paths:
      - 'bicep/**'
      - 'promptflow/**'

env:
  RESOURCE_GROUP_NAME: 'intership2025'
  LOCATION: 'westeurope'

jobs:
  deploy-resources:
    name: Deploy Azure Resources
    runs-on: self-hosted
    steps:

      - name: Runner Diagnostics
        run: |
          echo "===== Runner Info ====="
          echo "Runner Name: $RUNNER_NAME"
          echo "Runner OS: $RUNNER_OS"
          echo "Runner Architecture: $RUNNER_ARCH"
          echo "========================"
      
          echo ""
          echo "===== System Info ====="
          whoami
          uname -a
          lscpu | grep -E 'Model name|Architecture|CPU\(s\)'
          free -h
          df -h
          echo ""
          echo "===== OS Release ====="
          cat /etc/os-release || echo "/etc/os-release not found"
          echo ""
          echo "===== Network Info ====="
          ip addr || ifconfig || echo "Cannot get network info"
          echo ""
          echo "===== Installed Package Manager ====="
          (command -v apt && echo "APT detected") || \
          (command -v yum && echo "YUM detected") || \
          (command -v dnf && echo "DNF detected") || \
          (command -v apk && echo "APK detected") || \
          echo "No known package manager found."

      - name: Print system info (debug)
        run: |
          uname -a
          cat /etc/os-release || echo "OS release file not found"
          echo "User: $(whoami)"

      - name: Disable submodule recursion
        run: git config --global submodule.recurse false

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies and Python 3.11
        run: |
          if command -v yum &> /dev/null; then
            sudo yum install -y gcc make openssl-devel bzip2-devel libffi-devel zlib-devel \
              libuuid-devel readline-devel sqlite-devel xz-devel wget
          fi

          wget https://www.python.org/ftp/python/3.11.9/Python-3.11.9.tgz
          tar xvf Python-3.11.9.tgz
          cd Python-3.11.9
          ./configure --enable-optimizations --with-ensurepip=install
          make -j$(nproc)
          sudo make altinstall

          python3.11 -m ensurepip || true
          python3.11 -m pip --version || true  

      - name: Manually install pip if missing
        run: |
          if ! python3.11 -m pip --version; then
            curl -sS https://bootstrap.pypa.io/get-pip.py -o get-pip.py
            sudo python3.11 get-pip.py
          fi
          python3.11 -m pip --version

      - name: Set up Python 3.11 venv and install Azure CLI
        working-directory: ./Deployment/promptflow
        run: |
          rm -rf pf
          python3.11 -m venv pf
          source pf/bin/activate
          pip install --upgrade pip setuptools wheel
          pip install msal==1.20.0
          pip install azure-cli==2.72.0
          source pf/bin/activate
          az cloud set -n azurecloud
          az login --service-principal \
            -u "${{ secrets.CLIENT_ID }}" \
            -p "${{ secrets.CLIENT_SECRET }}" \
            --tenant "${{ secrets.TENANT_ID }}"
          az account set --subscription "${{ secrets.SUBSCRIPTION_ID }}"

      - name: Verify Azure login
        working-directory: ./Deployment/promptflow
        run: |
          source pf/bin/activate
          az account show
          echo "Resource Group: $RESOURCE_GROUP_NAME"

      - name: Deploy Azure resources with Bicep
        working-directory: ./Deployment/bicep
        run: |
          source ../promptflow/pf/bin/activate
          az bicep build --file main.bicep
          az deployment group create \
            --resource-group $RESOURCE_GROUP_NAME \
            --template-file main.bicep \
            --parameters parameters.json \
            --parameters location=$LOCATION

      - name: Verify Azure CLI functionality
        working-directory: ./Deployment/promptflow
        run: |
          source pf/bin/activate
          az account show
          az ad signed-in-user show || echo "Warning: Could not verify user details"

  deploy-promptflow:
    name: Deploy Prompt Flow
    needs: deploy-resources
    runs-on: self-hosted
    steps:
      - name: Disable submodule recursion
        run: git config --global submodule.recurse false

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Define cross-platform install function
        run: |
          install_package() {
            if command -v apt-get &> /dev/null; then
              sudo apt-get update
              sudo apt-get install -y "$@"
            elif command -v yum &> /dev/null; then
              sudo yum install -y "$@"
            elif command -v dnf &> /dev/null; then
              sudo dnf install -y "$@"
            elif command -v apk &> /dev/null; then
              sudo apk add "$@"
            else
              echo "No compatible package manager found."
              exit 1
            fi
          }
          declare -f install_package >> ~/.bashrc

      - name: Set up Python 3.11 virtualenv and Azure CLI
        working-directory: ./Deployment/promptflow
        run: |
          python3.11 -m venv pf
          source pf/bin/activate
          pip install --upgrade pip
          pip install azure-cli
          source pf/bin/activate
          az cloud set -n azurecloud
          az login --service-principal \
            -u "${{ secrets.CLIENT_ID }}" \
            -p "${{ secrets.CLIENT_SECRET }}" \
            --tenant "${{ secrets.TENANT_ID }}"
          az account set --subscription "${{ secrets.SUBSCRIPTION_ID }}"

      - name: Verify Azure login
        working-directory: ./Deployment/promptflow
        run: |
          source pf/bin/activate
          az account show
          echo "Resource Group: $RESOURCE_GROUP_NAME"

      - name: Install dos2unix (if needed)
        run: |
          source ~/.bashrc
          install_package dos2unix

      - name: Fix line endings with dos2unix
        working-directory: ./Deployment/promptflow
        run: dos2unix deploy.sh

      - name: Deploy Prompt Flow
        working-directory: ./Deployment/promptflow
        run: |
          source pf/bin/activate
          chmod +x deploy.sh
          ./deploy.sh

      - name: Clean up
        if: always()
        run: |
          rm -rf ./Deployment/promptflow/pf
